name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'worker/**'
      - 'backend/schema.sql'
      - 'backend/setup.sql'
  pull_request:
    branches: [main]
    paths:
      - 'worker/**'
      - 'backend/schema.sql'
      - 'backend/setup.sql'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: '**/yarn.lock'

      - name: Install Dependencies
        working-directory: worker
        run: yarn install --frozen-lockfile

      - name: Apply Database Migrations
        if: github.event_name == 'push'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: worker
          command: d1 execute carbonledger --file ../backend/schema.sql
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: worker
          command: deploy --env ${{ github.event_name == 'push' && 'production' || 'preview' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Verify Database Migration
        if: github.event_name == 'push'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: worker
          command: d1 execute carbonledger --command "SELECT name FROM sqlite_master WHERE type='table';"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} 
